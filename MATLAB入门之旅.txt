
load datafile  加载datafile.m文件
save datafile 保存datafile.m文件

在命令行窗口仅显示前四位小数位，可以利用format控制显示的精度
format long
x
format short 
x

new live script

matrix   column vector   row vector  scalar标量

可以使用方括号创建包含多个元素的数组。

当您用空格（或逗号）分隔数值时（如前面的任务中所示），MATLAB 会将这些数值组合为一个行向量，行向量是一个包含一行多列的数组 (1×n)。当您用分号分隔数值时，MATLAB 会创建一个列向量 (n×1)。

在 MATLAB 中，您可以在方括号内执行计算。
x = [abs(-4) 4^2]
x = 
     4    16

对于长向量，输入单个数值是不实际的。可用来创建等间距向量的替代便捷方法是使用 : 运算符并仅指定起始值和最终值。
y = 5:8
y = 
    5    6    7    8
请注意，当您使用冒号运算符时，不需要方括号。

: 运算符使用默认的间距 1，但是您可以指定您自己的间距，如下所示。
x = 20:2:26
x = 
    20    22    24    26

如果您知道向量中所需的元素数目（而不是每个元素之间的间距），则可以改用 linspace 函数：
linspace(first,last,number_of_elements)

注意，请使用逗号 (,) 分隔 linspace 函数的输入。
x = linspace(0,1,5)
x = 
    0    0.250    0.500    0.750    1.000
任务

linspace 和 : 运算符都可创建行向量。但是，您可以使用转置运算符 (') 将行向量转换为列向量。

请注意，如果您使用 linspace 或 : 创建向量，则不需要使用方括号 ([])。

MATLAB 包含许多函数，可帮助您创建常用的矩阵，例如随机数矩阵。
x = rand(2)
x = 
    0.8147    0.1270
    0.9058    0.9134
请注意，rand(2) 命令中的 2 指定输出将为一个 2×2 的随机数矩阵。

许多矩阵创建函数允许您输入一个数值来创建方阵 (n×n)，或者输入两个数值来创建非方阵。
x = rand(2)
x = 
    0.8147    0.1270
    0.9058    0.9134

x = rand(2,3)
x = 
    0.6324    0.2785    0.9575
    0.0975    0.5469    0.9649

使用 zeros 函数创建一个包含 6 行 3 列 (6×3) 的全零矩阵。将结果赋给名为 x 的变量。

您可以使用行、列索引从数组中提取值。
y = A(5,7)
此语法将会提取 A 的第 5 行第 7 列的值，然后将结果赋给变量 y。


您可以使用 MATLAB 关键字 end 作为行或列索引来引用最后一个元素。
y = A(end,2)
请注意，您可以将算术运算与关键字 end 结合使用。例如：
y = A(end-1,end-2) 倒数第一行倒数第二行

如果只对一个矩阵使用一种索引，它将按顺序从上到下遍历每列。试着用一种索引提取 data 的第八个元素。y=data(8)

用作索引时，冒号运算符 (:) 可指代该维度中的所有元素。以下语法
x = A(2,:)
会创建一个包含 A 中第 2 行上所有元素的行向量。

单个索引值可用于引用向量元素。例如 
x = v(3)
会返回向量 v 的第 3 个元素（当 v 为行向量或列向量时）。

MATLAB 的设计让您能够自然地处理数组。例如，您可以将一个标量值与数组中的所有元素相加。
y = x + 2

MATLAB 中的基本统计函数可应用于某个向量以生成单个输出。可以使用 max 函数来确定向量的最大值。
xMax = max(x)

MATLAB 的函数可在单个命令中对整个向量或值数组执行数学运算。
xSqrt = sqrt(x)

* 运算符执行矩阵乘法。因此，如果您使用 * 将两个大小相同的向量相乘，则由于内部维度不一致，您将会收到一条错误消息。
z = [3 4] * [10 20]
错误使用  * 
用于矩阵乘法的维度不正确。 

而 .* 运算符执行按元素乘法，允许您将两个大小相同的数组的对应元素相乘。
z = [3 4] .* [10 20]
z = 
    30    80


size 函数可以应用于矩阵，以生成单个输出变量或两个输出变量。使用方括号 ([ ]) 获得多个输出。
[xrow,xcol] = size(x)

可以使用 max 函数确定向量的最大值及其对应的索引值。max 函数的第一个输出为输入向量的最大值。执行带两个输出的调用时，第二个输出为索引值。
[xMax,idx] = max(x)

您也可以使用 doc 函数打开文档。尝试使用如下代码打开 randi 的文档：
doc randi

plot 函数接受一个附加参数。使用该参数，您可以通过在引号中包含不同符号的方式来指定与之对应的颜色、线型和标记样式。
plot(x,y,"r--o")
以上命令将会绘制一条红色 (r) 虚线 (--)，并使用圆圈 (o) 作为标记。您可以在线条设定的文档中了解有关可用符号的详细信息。
请注意，每个绘图命令都创建了一个单独的绘图。要在一张图上先后绘制两条线，请使用 hold on 命令保留之前的绘图，然后添加另一条线。
启用保留状态时，将继续在同一坐标区上绘图。要恢复默认绘图行为，即其中每个绘图都有自己的坐标区，请输入 hold off。

当您单独绘制一个向量时，MATLAB 会使用向量值作为 y 轴数据，并将 x 轴数据的范围设置为从 1 到 n（向量中的元素数目）。
plot 函数接受可选的附加输入，这些输入由一个属性名称和一个关联的值组成。
plot(y,"LineWidth",5)
以上命令将绘制一条粗线。

可以使用绘图注释函数（例如 title）在绘图中添加标签。此类函数的输入是一个字符串。MATLAB 中的字符串是用双引号 (") 引起来的。
title("Plot Title")
使用 ylabel 函数添加标签 "Mass (g)"。
您可以使用 legend 函数为绘图添加图例。
legend("a","b","c")

您可以在绘图注释中使用变量的值，方法是将字符串与变量串联起来：
bar(data(3,:))柱状图
title("Sample " + sample(3) + " Data")

傅里叶变换将返回信号的频谱信息。主频的位置将显示和弦中包含的音符。

您可以使用 fft 函数来计算向量的离散傅里叶变换。
fft(y)

fft 的输出值为复数。您可以使用 abs 函数来获得幅值。

将 f 乘以 fs/n。将输出赋给同一个变量 f。

使用 x 的限值 0 和 1000 绘制 yfft 对 f 的图。
f=f*fs/n
plot(f,yfft)
xlim([0 1000])

要提取表变量，可以使用圆点表示法：
data.VariableName

圆点表示法用于提取表变量。要提取行，可以使用常规数组索引。

尝试提取表的前三行：
top3 = elements(1:3,:)
请注意，top3 也是一个表。

逻辑索引
关系运算符（例如 >、<、== 和 ~=）执行两个值之间的比较。相等或不相等比较的结果为 1 (true) 或 0 (false)。如执行test=pi<4 后test=1

您可以使用关系运算符将某个向量或矩阵与单个标量值进行比较。结果是与原始数组相同大小的逻辑数组。
[5 10 15] > 12
ans = 
    0    0    1

您可以使用逻辑数组作为数组索引，在这种情况下，MATLAB 会提取索引为 true 的数组元素。以下示例将会提取 v1 中大于 6 的所有元素。
v = v1(v1 > 6)
v =
    6.6678
    9.0698

创建一个名为 s 的变量，其中包含 sample 中与 v1 中小于 4 的元素所在位置对应的元素。
s=sample(v1<4)

您可以使用逻辑索引在数组中重新赋值。例如，如果您要将数组 x 中等于 999 的所有值都替换为值 1，请使用以下语法。
x(x==999) = 1

您可以使用逻辑运算符 and (&) 以及 or (|) 来组合逻辑比较。

要查找小于 4 且大于 2 的值，请使用 &：
x = v1(v1<4 & v1>2)

要查找大于 6 或小于 2 的值，请使用 |：
x = v1(v1>6 | v1<2)

项目
将 x = lambdaHa、y = sHa 处的点绘制成一个标记大小 ("MarkerSize") 为 8 的红色方框 ("rs")，添加到现有图中。
hold on
loglog(lambdaHa,sHa,"rs","MarkerSize",8)
hold off